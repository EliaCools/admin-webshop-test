# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    sonata.block.service.login:
        class: App\Admin\blockService\LoginBlockService
        arguments:
            - '@twig'
        tags:
            - { name: sonata.block}


    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [ ~, App\Entity\Product, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: main, label: Product }
        calls:
            - [setTemplate, ['filter', 'admin/ProductAdmin/filter_admin_fields.html.twig']]
    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [ ~, App\Entity\Category, App\Controller\CategoryAdminController ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: main, label: Category }
        calls:
            - [ addChild, ['@admin.product', 'category' ] ]
    admin.productimage:
        class: App\Admin\ProductImageAdmin
        arguments: [~, App\Entity\ProductImage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: hide,  label: ProductImage, show_in_dashboard: false }
    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: hide,  label: user }
